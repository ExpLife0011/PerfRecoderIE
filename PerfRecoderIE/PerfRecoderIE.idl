// PerfRecoderIE.idl : IDL source for PerfRecoderIE
//

// This file will be processed by the MIDL tool to
// produce the type library (PerfRecoderIE.tlb) and marshalling code.

import "oaidl.idl";
import "ocidl.idl";

[
	object,
	uuid(E4C5E4FF-AE5E-40A9-BF78-0A6776BFB67F),
	dual,
	nonextensible,
	pointer_default(unique)
]
interface IPerfRecoder : IDispatch{
	[id(1)] HRESULT getPhysicalGPUIds([out, retval] BSTR* ids);
	[id(2)] HRESULT getGPUFullName([in] LONG id, [out, retval] BSTR* name);
	[id(3)] HRESULT getGPUUsage([in] LONG id, [out, retval] LONG* usages);
	[id(4)] HRESULT getGPUMemoryInfo([in] LONG id, [out, retval] BSTR* info);
	[id(5)] HRESULT getAllProcessInfo([out, retval] BSTR* info);
	[id(6)] HRESULT monitoringProcess([in] ULONG pid);
	[id(7)] HRESULT getProcessCPUUsage([out, retval] FLOAT* usage);
	[id(8)] HRESULT getProcessMemoryInfo([out, retval] BSTR* usage);
};
[
	uuid(3AA47554-0D3F-4399-9138-5E4506951DF6),
	version(1.0),
]
library PerfRecoderIELib
{
	importlib("stdole2.tlb");
	[
		uuid(E2745D8D-7BC1-4D7C-A721-0DBD507A1D43)		
	]
	dispinterface _IPerfRecoderEvents
	{
		properties:
		methods:
	};
	[
		uuid(8F1B6710-FCCD-4DC8-B24F-26294818D793)		
	]
	coclass PerfRecoder
	{
		[default] interface IPerfRecoder;
		[default, source] dispinterface _IPerfRecoderEvents;
	};
};

